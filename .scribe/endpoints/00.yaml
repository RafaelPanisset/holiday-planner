name: Auth
description: 'Authentication API'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: 'Authentication API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a user'
      description: 'Registers a new user and returns an access token'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's name"
        required: true
        example: quod
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "The user's email address"
        required: true
        example: frederique68@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: "The user's password"
        required: true
        example: '&x$;cpMhxm'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmed password'
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: quod
      email: frederique68@example.net
      password: '&x$;cpMhxm'
      password_confirmation: sapiente
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "token": "access_token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "error": "Problem in the validation!",
              "validation": {
                  "name": [
                      "The name field is required."
                  ],
                  "email": [
                      "The email field is required.",
                      "The email has already been taken."
                  ],
                  "password": [
                      "The password field is required.",
                      "The password must be at least 8 characters."
                  ],
                  "password_confirmation": [
                      "The password confirmation does not match."
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: 'Authentication API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a user'
      description: 'Logs in a user and returns an access token'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address"
        required: true
        example: nikolas.kertzmann@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: "The user's password"
        required: true
        example: 'NdA.U^BBL%5b\~''(^;>&'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: nikolas.kertzmann@example.org
      password: 'NdA.U^BBL%5b\~''(^;>&'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "token": "access_token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "error": "Problem in the validation!",
              "validation": {
                  "email": [
                      "The email field is required."
                  ],
                  "password": [
                      "The password field is required."
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: 'Authentication API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout a user'
      description: 'Logs out a user and revokes their access token'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
